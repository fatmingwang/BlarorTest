@page "/QuickGridTest"


@*
    //button
    https://aspnet.github.io/quickgridsamples/columns
    //next page
    https://aspnet.github.io/quickgridsamples/filtering 
*@


<QuickGrid Items="@people">
    <PropertyColumn Property="@(p => p.PersonId)" Sortable="true" />
    <PropertyColumn Property="@(p => p.Name)" Sortable="true" />
    <PropertyColumn Property="@(p => p.BirthDate)" Format="yyyy-MM-dd" Sortable="true" />
    <TemplateColumn Title="Actions">
        <button @onclick="@(() => Hire(context))">Hire</button>
    </TemplateColumn>
</QuickGrid>

<p><strong>@message</strong></p>

@code {
    record Person(int PersonId, string Name, DateOnly BirthDate);

    IQueryable<Person> people = new[]
    {
        new Person(10895, "Jean Martin", new DateOnly(1985, 3, 16)),
        new Person(10944, "António Langa", new DateOnly(1991, 12, 1)),
        new Person(11203, "Julie Smith", new DateOnly(1958, 10, 10)),
        new Person(11205, "Nur Sari", new DateOnly(1922, 4, 27)),
        new Person(11898, "Jose Hernandez", new DateOnly(2011, 5, 3)),
        new Person(12130, "Kenji Sato", new DateOnly(2004, 1, 9)),

        new Person(1, "Jean Martin", new DateOnly(1985, 3, 16)),
        new Person(1, "António Langa", new DateOnly(1991, 12, 1)),
        new Person(1, "Julie Smith", new DateOnly(1958, 10, 10)),
        new Person(1, "Nur Sari", new DateOnly(1922, 4, 27)),
        new Person(1, "Jose Hernandez", new DateOnly(2011, 5, 3)),
        new Person(1, "Kenji Sato", new DateOnly(2004, 1, 9)),

        new Person(2, "Jean Martin", new DateOnly(1985, 3, 16)),
        new Person(2, "António Langa", new DateOnly(1991, 12, 1)),
        new Person(2, "Julie Smith", new DateOnly(1958, 10, 10)),
        new Person(2, "Nur Sari", new DateOnly(1922, 4, 27)),
        new Person(2, "Jose Hernandez", new DateOnly(2011, 5, 3)),
        new Person(2, "Kenji Sato", new DateOnly(2004, 1, 9)),

        new Person(3, "Jean Martin", new DateOnly(1985, 3, 16)),
        new Person(3, "António Langa", new DateOnly(1991, 12, 1)),
        new Person(3, "Julie Smith", new DateOnly(1958, 10, 10)),
        new Person(3, "Nur Sari", new DateOnly(1922, 4, 27)),
        new Person(3, "Jose Hernandez", new DateOnly(2011, 5, 3)),
        new Person(3, "Kenji Sato", new DateOnly(2004, 1, 9)),
    }.AsQueryable();

    string message = string.Empty;

    void Hire(Person p) => message = $"You want to hire {p.PersonId} {p.Name}";

    void Fire(Person p) => message = $"You want to fire {p.PersonId} {p.Name}";
}

@* 

<p>
    <label>
        Select one or more cars:
        <select @onchange="SelectedCarsChanged">
            <option value="audi">Audi</option>
            <option value="jeep">Jeep</option>
            <option value="opel">Opel</option>
            <option value="saab">Saab</option>
            <option value="volvo">Volvo</option>
        </select>
    </label>
</p>

<p>
    Selected Cars: @string.Join(", ", SelectedCars)
</p>

<p>
    <label>
        Select one or more cities:
        <select @bind="SelectedCities" multiple>
            <option value="bal">Baltimore</option>
            <option value="la">Los Angeles</option>
            <option value="pdx">Portland</option>
            <option value="sf">San Francisco</option>
            <option value="sea">Seattle</option>
        </select>
    </label>
</p>

<span>
    Selected Cities: @string.Join(", ", SelectedCities)
</span>

@code {
    public string[] SelectedCars { get; set; } = new string[] { };
    public string[] SelectedCities { get; set; } = new[] { "bal", "sea" };

    private void SelectedCarsChanged(ChangeEventArgs e)
    {
        if (e.Value is not null)
        {
            SelectedCars = (string[])e.Value;
        }
    }
} *@